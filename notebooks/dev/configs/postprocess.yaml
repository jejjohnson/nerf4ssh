fill_nans:
  _target_: "oceanbench._src.geoprocessing.interpolate.fillnans"
  _partial_: True
  dims: ["lat", "lon"]
  method: "slinear"
  fill_value: "extrapolate"

domain:
  lat: { _target_: "builtins.slice", _args_: [32., 44.] }
  lon: { _target_: "builtins.slice", _args_: [-66., -54.] }
  time: { _target_: "builtins.slice", _args_: ["2012-10-22", "2012-12-02"] }

domain_full:
  lat: { _target_: "builtins.slice", _args_: [32., 44.] }
  lon: { _target_: "builtins.slice", _args_: [-66., -54.] }
  time: { _target_: "builtins.slice", _args_: ["2012-10-22", "2013-10-01"] }

registry: ../sla-data-registry
geoval: "oceanbench._src.geoprocessing.validation"

select:
  _target_: "xarray.Dataset.sel"
  _partial_: True
  indexers: "${domain}"

select_full:
  _target_: "xarray.Dataset.sel"
  _partial_: True
  indexers: "${domain}"

resample:
  method:
    _target_: "xarray.Dataset.resample"
    _partial_: True
    indexer:
      time: "1D"
  aggregate:
    _target_: "xarray.core.resample.DatasetResample.mean"
    _partial_: True

coarsen:
  method:
    _target_: "xarray.Dataset.coarsen"
    _partial_: True
    dim:
      lon: 1
      lat: 1
  aggregate:
    _target_: "xarray.core.rolling.DatasetCoarsen.mean"
    _partial_: True

preprocess_chain_natl60:
  _target_: "oceanbench._src.data.pipe"
  _partial_: true
  fns:
    - {
        _target_: "xarray.Dataset.rename",
        name_dict: { "sossheig": "ssh" },
        _partial_: True,
      }
    # VALIDATE COORDINATES
    - {
        _target_: "jejeqx._src.transforms.spatial.validate_lon",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.spatial.validate_lat",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.temporal.validate_time",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.xarray.spatial.transform_360_to_180",
        _partial_: True,
      }
    # DECODE TEMPORAL COORDINATES
    - {
        _target_: "jejeqx._src.transforms.temporal.decode_cf_time",
        units: "seconds since 2012-10-01",
        _partial_: true,
      }
    # RESAMPLE DATASET
    - "${resample.method}"
    - "${resample.aggregate}"
    # COARSEN DATASET
    - "${coarsen.method}"
    - "${coarsen.aggregate}"
    # SELECT REGION
    - "${select}"
    - { _target_: "xarray.Dataset.sortby", variables: "time", _partial_: True }

# NATL60 GULFSTREAM SIMULATION - REDUCED VERSION
NATL60_GF_1Y1D:
  _target_: "oceanbench._src.data.pipe"
  inp: "/gpfswork/rech/cli/uvo53rl/projects/jejeqx/data/natl60/NATL60-CJM165_GULFSTREAM_ssh_y2013.1y.nc"
  fns:
    - { _target_: "xarray.open_dataset", decode_times: False, _partial_: True }
    # VALIDATE COORDINATES
    - {
        _target_: "jejeqx._src.transforms.spatial.validate_lon",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.spatial.validate_lat",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.temporal.validate_time",
        _partial_: True,
      }
    - {
        _target_: "jejeqx._src.transforms.xarray.spatial.transform_360_to_180",
        _partial_: True,
      }
    # RESCALE TIME
    - {
        _target_: "jejeqx._src.transforms.temporal.decode_cf_time",
        units: "seconds since 2012-10-01",
        _partial_: true,
      }
    # SELECT REGION
    - "${select}"
    - { _target_: "xarray.Dataset.sortby", variables: "time", _partial_: True }

# NATL60 GULFSTREAM SIMULATION
NATL60_GF_FULL:
  _target_: "xarray.open_mfdataset"
  paths: "/gpfswork/rech/yrf/commun/data_challenges/dc20a_osse/test/dc_ref/NATL60-CJM165_GULFSTREAM*"
  preprocess: "${preprocess_chain_natl60}"
  combine: "nested"
  concat_dim: "time"
  decode_times: True
